$NetBSD: patch-wscript,v 1.4 2024/01/13 12:08:18 adam Exp $

Don't hardcode PREFIX.

--- wscript.orig	2023-12-29 04:53:56.000000000 +0000
+++ wscript
@@ -521,36 +521,12 @@ int main(int argc, char **argv) {
 
     # XXX: hack
     if ctx.env.DEST_OS in ["freebsd"]:
-        ctx.env.INCLUDES = ["/usr/local/include"]
-        ctx.env.LIBPATH = ["/usr/local/lib"]
-        if os.path.isdir("/usr/local/ssl/"):
-          # This assumes OpenSSL is the only thing that was in /usr/local/
-          ctx.env.INCLUDES = ["/usr/local/ssl/include"]
-          ctx.env.LIBPATH = ["/usr/local/ssl/lib"]
+        pass
     elif ctx.env.DEST_OS == "netbsd" and os.path.isdir("/usr/pkg/include"):
-        ctx.env.INCLUDES = ["/usr/pkg/include"]
-        ctx.env.LIBPATH = ["/usr/pkg/lib"]
-        ctx.env.LDFLAGS += ["-rpath=/usr/pkg/lib"]
-        if os.path.isdir("/usr/local/ssl/"):
-          # This assumes OpenSSL is the only thing that was in /usr/pkg/
-          ctx.env.INCLUDES = ["/usr/local/ssl/include"]
-          ctx.env.LIBPATH = ["/usr/local/ssl/lib"]
+        pass
     elif ctx.env.DEST_OS == "linux" and os.path.isdir("/usr/local/ssl/"):
-        # This supports building OpenSSL from source
-        # That allows using OpenSSL 1.1.1 on older CentOS
-        # or testing pre-release versions of OpenSSL
-        # see HOWTO-OpenSSL
-        ctx.env.INCLUDES = ["/usr/local/ssl/include"]
-        if os.path.isdir("/usr/local/ssl/lib64/"):
-          ctx.env.LIBPATH = ["/usr/local/ssl/lib64"]
-        else:
-          ctx.env.LIBPATH = ["/usr/local/ssl/lib"]
+        pass
     elif ctx.env.DEST_OS == "darwin":
-        # macports location
-        if os.path.isdir("/opt/local/include"):
-            ctx.env.INCLUDES = ["/opt/local/include"]
-        if os.path.isdir("/opt/local/lib"):
-            ctx.env.LIBPATH = ["/opt/local/lib"]
         # OS X needs this for IPv6
         ctx.define("__APPLE_USE_RFC_3542", 1,
                    comment="Needed for IPv6 support")
